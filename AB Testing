{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyNymJNSD2kF/kUjPiW0HwVi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"7ePovlYgPvPW"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from google.colab import drive"]},{"cell_type":"code","source":["drive.mount('/content/drive')\n","file_path = '/content/drive/My Drive/AB_Testing/data.xlsx'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5AP45pCaPylC","executionInfo":{"status":"ok","timestamp":1717113937261,"user_tz":240,"elapsed":22473,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"f45b81e9-09f4-429f-99de-22c164d81614"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df = pd.read_excel(file_path)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"LhT_4MzzP1dd","executionInfo":{"status":"ok","timestamp":1704938682864,"user_tz":300,"elapsed":11992,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"f45868da-4d2f-401b-c8ec-09c12582f2fd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   applicant_id            channel      group     city             event  \\\n","0         10001  web-search-engine    control   Asgard  application_date   \n","1         10002       social-media    control  Midgard  application_date   \n","2         10003  web-search-engine  treatment  Midgard  application_date   \n","3         10004       social-media  treatment   Asgard  application_date   \n","4         10005       social-media  treatment  Midgard  application_date   \n","\n","  event_date  \n","0 2018-10-01  \n","1 2018-10-01  \n","2 2018-10-01  \n","3 2018-10-01  \n","4 2018-10-01  "],"text/html":["\n","  <div id=\"df-3bd6c748-3588-44ac-a4e5-d92d1c931147\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>applicant_id</th>\n","      <th>channel</th>\n","      <th>group</th>\n","      <th>city</th>\n","      <th>event</th>\n","      <th>event_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001</td>\n","      <td>web-search-engine</td>\n","      <td>control</td>\n","      <td>Asgard</td>\n","      <td>application_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10002</td>\n","      <td>social-media</td>\n","      <td>control</td>\n","      <td>Midgard</td>\n","      <td>application_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10003</td>\n","      <td>web-search-engine</td>\n","      <td>treatment</td>\n","      <td>Midgard</td>\n","      <td>application_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10004</td>\n","      <td>social-media</td>\n","      <td>treatment</td>\n","      <td>Asgard</td>\n","      <td>application_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10005</td>\n","      <td>social-media</td>\n","      <td>treatment</td>\n","      <td>Midgard</td>\n","      <td>application_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bd6c748-3588-44ac-a4e5-d92d1c931147')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3bd6c748-3588-44ac-a4e5-d92d1c931147 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3bd6c748-3588-44ac-a4e5-d92d1c931147');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-977f5c59-2eb6-4adc-b5bb-58e40f5e4206\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-977f5c59-2eb6-4adc-b5bb-58e40f5e4206')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-977f5c59-2eb6-4adc-b5bb-58e40f5e4206 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# check data type\n","print(df.dtypes)\n","\n","# check len and column number\n","print(df.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lmkz89f1QJpQ","executionInfo":{"status":"ok","timestamp":1704938686067,"user_tz":300,"elapsed":163,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"1b977f74-59fb-4ef1-dd9a-c3cd29f3e0b4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["applicant_id             int64\n","channel                 object\n","group                   object\n","city                    object\n","event                   object\n","event_date      datetime64[ns]\n","dtype: object\n","(108328, 6)\n"]}]},{"cell_type":"code","source":["# change datatype\n","df['applicant_id'] = df['applicant_id'].astype('object')\n","df['event_date'] = df['event_date'].astype('datetime64')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ts69jZW-QVg5","executionInfo":{"status":"ok","timestamp":1704938688675,"user_tz":300,"elapsed":241,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"c7c1d15d-0918-49c3-8a90-45ef89be5b27"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-41026713956f>:3: FutureWarning: Passing unit-less datetime64 dtype to .astype is deprecated and will raise in a future version. Pass 'datetime64[ns]' instead\n","  df['event_date'] = df['event_date'].astype('datetime64')\n"]}]},{"cell_type":"code","source":["# explore dataset\n","df.describe(include = 'all')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"NGYXAEYuQuyD","executionInfo":{"status":"ok","timestamp":1704938690938,"user_tz":300,"elapsed":406,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"b3e3398d-dac2-4193-f08d-2576cb574fbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-6-7d06fbb616e2>:2: FutureWarning: Treating datetime data as categorical rather than numeric in `.describe` is deprecated and will be removed in a future version of pandas. Specify `datetime_is_numeric=True` to silence this warning and adopt the future behavior now.\n","  df.describe(include = 'all')\n"]},{"output_type":"execute_result","data":{"text/plain":["        applicant_id            channel    group     city             event  \\\n","count       108328.0             108328   108328   108328            108328   \n","unique       21698.0                  4        2        9                 7   \n","top          13575.0  web-search-engine  control  Midgard  application_date   \n","freq             7.0              41632    68750    49648             21698   \n","first            NaN                NaN      NaN      NaN               NaN   \n","last             NaN                NaN      NaN      NaN               NaN   \n","\n","                 event_date  \n","count                108328  \n","unique                   42  \n","top     2018-11-11 00:00:00  \n","freq                   3625  \n","first   2018-10-01 00:00:00  \n","last    2018-11-11 00:00:00  "],"text/html":["\n","  <div id=\"df-3f6a795d-2d27-48a5-a6f5-a3a020d173ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>applicant_id</th>\n","      <th>channel</th>\n","      <th>group</th>\n","      <th>city</th>\n","      <th>event</th>\n","      <th>event_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>108328.0</td>\n","      <td>108328</td>\n","      <td>108328</td>\n","      <td>108328</td>\n","      <td>108328</td>\n","      <td>108328</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>21698.0</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>13575.0</td>\n","      <td>web-search-engine</td>\n","      <td>control</td>\n","      <td>Midgard</td>\n","      <td>application_date</td>\n","      <td>2018-11-11 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>7.0</td>\n","      <td>41632</td>\n","      <td>68750</td>\n","      <td>49648</td>\n","      <td>21698</td>\n","      <td>3625</td>\n","    </tr>\n","    <tr>\n","      <th>first</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2018-10-01 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>last</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2018-11-11 00:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f6a795d-2d27-48a5-a6f5-a3a020d173ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f6a795d-2d27-48a5-a6f5-a3a020d173ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f6a795d-2d27-48a5-a6f5-a3a020d173ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1d001fbf-56f4-45fc-8a3f-623ad9b42f60\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d001fbf-56f4-45fc-8a3f-623ad9b42f60')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1d001fbf-56f4-45fc-8a3f-623ad9b42f60 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# check unique sample size\n","df.groupby('group').applicant_id.nunique() # return series\n","df.groupby('group').agg({'applicant_id': 'nunique'}) # return df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"u0Xf9mdbRGVZ","executionInfo":{"status":"ok","timestamp":1704938693423,"user_tz":300,"elapsed":226,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"63d8f58a-d8b1-496a-bcd7-2eed2843abca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           applicant_id\n","group                  \n","control           14501\n","treatment          7197"],"text/html":["\n","  <div id=\"df-a4295769-6230-4b47-b74e-7da1ead5047b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>applicant_id</th>\n","    </tr>\n","    <tr>\n","      <th>group</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>control</th>\n","      <td>14501</td>\n","    </tr>\n","    <tr>\n","      <th>treatment</th>\n","      <td>7197</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4295769-6230-4b47-b74e-7da1ead5047b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4295769-6230-4b47-b74e-7da1ead5047b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4295769-6230-4b47-b74e-7da1ead5047b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a81e8b40-ac4e-48b2-9260-da4fa9175ba4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a81e8b40-ac4e-48b2-9260-da4fa9175ba4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a81e8b40-ac4e-48b2-9260-da4fa9175ba4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# check event size\n","df.groupby('group').applicant_id.count()\n","df.groupby('group').agg({'applicant_id': 'count'}) # return df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"nVO2f26-RGb8","executionInfo":{"status":"ok","timestamp":1704938697640,"user_tz":300,"elapsed":195,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"6056491a-c1ed-4690-bc15-6ee36f9bd982"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           applicant_id\n","group                  \n","control           68750\n","treatment         39578"],"text/html":["\n","  <div id=\"df-814b49ca-8113-4701-bacb-83ac736efc02\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>applicant_id</th>\n","    </tr>\n","    <tr>\n","      <th>group</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>control</th>\n","      <td>68750</td>\n","    </tr>\n","    <tr>\n","      <th>treatment</th>\n","      <td>39578</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-814b49ca-8113-4701-bacb-83ac736efc02')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-814b49ca-8113-4701-bacb-83ac736efc02 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-814b49ca-8113-4701-bacb-83ac736efc02');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b3f6b6b6-a4e9-4dd4-8b48-2ee4fe2fb4f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3f6b6b6-a4e9-4dd4-8b48-2ee4fe2fb4f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b3f6b6b6-a4e9-4dd4-8b48-2ee4fe2fb4f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# check conversion funnel and its sequence by group\n","print(df[df['group'] == 'control'].groupby(['group','event']).applicant_id.nunique().sort_values(ascending = False))\n","print(df[df['group'] == 'treatment'].groupby(['group','event']).applicant_id.nunique().sort_values(ascending = False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qw5KLIQxSbD5","executionInfo":{"status":"ok","timestamp":1704938705585,"user_tz":300,"elapsed":182,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"ed57d8e6-9c4d-4d80-c78c-9ebb65fadb1f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["group    event                          \n","control  application_date                   14501\n","         card_mailed_date                   14266\n","         background_check_initiated_date    10836\n","         card_activation_date               10836\n","         background_check_completed_date     9456\n","         orientation_completed_date          5982\n","         first_batch_completed_date          2873\n","Name: applicant_id, dtype: int64\n","group      event                          \n","treatment  application_date                   7197\n","           background_check_initiated_date    7197\n","           card_mailed_date                   7071\n","           background_check_completed_date    6384\n","           card_activation_date               5889\n","           orientation_completed_date         3369\n","           first_batch_completed_date         2471\n","Name: applicant_id, dtype: int64\n"]}]},{"cell_type":"code","source":["# check experiment duration\n","print(df['event_date'].min())\n","print(df['event_date'].max())\n","\n","df['event_date'].max() - df['event_date'].min()"],"metadata":{"id":"6y_YQA6nSbH5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704938831687,"user_tz":300,"elapsed":175,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"a9216207-264e-40f6-d784-8aac6e94b9ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2018-10-01 00:00:00\n","2018-11-11 00:00:00\n"]},{"output_type":"execute_result","data":{"text/plain":["Timedelta('41 days 00:00:00')"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# transpose the dataset by applicant\n","df_transpose = df.pivot_table(index = ['group','applicant_id'], columns = 'event', values = 'event_date', aggfunc = 'max')\n","df_transpose.reset_index()"],"metadata":{"id":"rhwIECavSbhX","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1704939333350,"user_tz":300,"elapsed":317,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"5a95fa16-7388-436d-f985-1f47d14dacd9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["event      group  applicant_id application_date  \\\n","0        control         10001       2018-10-01   \n","1        control         10002       2018-10-01   \n","2        control         10006       2018-10-01   \n","3        control         10007       2018-10-01   \n","4        control         10008       2018-10-01   \n","...          ...           ...              ...   \n","21693  treatment         31684       2018-11-11   \n","21694  treatment         31686       2018-11-11   \n","21695  treatment         31687       2018-11-11   \n","21696  treatment         31689       2018-11-11   \n","21697  treatment         31691       2018-11-11   \n","\n","event background_check_completed_date background_check_initiated_date  \\\n","0                                 NaT                             NaT   \n","1                          2018-10-17                      2018-10-12   \n","2                                 NaT                             NaT   \n","3                          2018-10-11                      2018-10-07   \n","4                                 NaT                             NaT   \n","...                               ...                             ...   \n","21693                             NaT                      2018-11-11   \n","21694                             NaT                      2018-11-11   \n","21695                             NaT                      2018-11-11   \n","21696                             NaT                      2018-11-11   \n","21697                             NaT                      2018-11-11   \n","\n","event card_activation_date card_mailed_date first_batch_completed_date  \\\n","0                      NaT       2018-10-01                        NaT   \n","1               2018-10-12       2018-10-01                 2018-10-20   \n","2                      NaT       2018-10-01                        NaT   \n","3               2018-10-07       2018-10-02                 2018-10-14   \n","4                      NaT       2018-10-02                        NaT   \n","...                    ...              ...                        ...   \n","21693                  NaT       2018-11-11                        NaT   \n","21694                  NaT       2018-11-11                        NaT   \n","21695                  NaT       2018-11-11                        NaT   \n","21696                  NaT       2018-11-11                        NaT   \n","21697                  NaT              NaT                        NaT   \n","\n","event orientation_completed_date  \n","0                     2018-10-03  \n","1                            NaT  \n","2                            NaT  \n","3                            NaT  \n","4                            NaT  \n","...                          ...  \n","21693                        NaT  \n","21694                        NaT  \n","21695                        NaT  \n","21696                        NaT  \n","21697                        NaT  \n","\n","[21698 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-a59e97a8-a526-48c6-b4b4-7e501dc3fab8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>event</th>\n","      <th>group</th>\n","      <th>applicant_id</th>\n","      <th>application_date</th>\n","      <th>background_check_completed_date</th>\n","      <th>background_check_initiated_date</th>\n","      <th>card_activation_date</th>\n","      <th>card_mailed_date</th>\n","      <th>first_batch_completed_date</th>\n","      <th>orientation_completed_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>control</td>\n","      <td>10001</td>\n","      <td>2018-10-01</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>2018-10-01</td>\n","      <td>NaT</td>\n","      <td>2018-10-03</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>control</td>\n","      <td>10002</td>\n","      <td>2018-10-01</td>\n","      <td>2018-10-17</td>\n","      <td>2018-10-12</td>\n","      <td>2018-10-12</td>\n","      <td>2018-10-01</td>\n","      <td>2018-10-20</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>control</td>\n","      <td>10006</td>\n","      <td>2018-10-01</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>2018-10-01</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>control</td>\n","      <td>10007</td>\n","      <td>2018-10-01</td>\n","      <td>2018-10-11</td>\n","      <td>2018-10-07</td>\n","      <td>2018-10-07</td>\n","      <td>2018-10-02</td>\n","      <td>2018-10-14</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>control</td>\n","      <td>10008</td>\n","      <td>2018-10-01</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>2018-10-02</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21693</th>\n","      <td>treatment</td>\n","      <td>31684</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>21694</th>\n","      <td>treatment</td>\n","      <td>31686</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>21695</th>\n","      <td>treatment</td>\n","      <td>31687</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>21696</th>\n","      <td>treatment</td>\n","      <td>31689</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>21697</th>\n","      <td>treatment</td>\n","      <td>31691</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>2018-11-11</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>21698 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a59e97a8-a526-48c6-b4b4-7e501dc3fab8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a59e97a8-a526-48c6-b4b4-7e501dc3fab8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a59e97a8-a526-48c6-b4b4-7e501dc3fab8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4ee8a4e9-903f-4bf2-9e13-59536f2fa79c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ee8a4e9-903f-4bf2-9e13-59536f2fa79c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4ee8a4e9-903f-4bf2-9e13-59536f2fa79c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# What's the distribution of the duration of the days between application_date to first_batch_completed_date\n","import seaborn as sns\n","duration = (df_transpose['first_batch_completed_date'] - df_transpose['application_date'])\n","sns.distplot(duration[duration.notna()].dt.days, hist_kws = {'cumulative':'True'}, kde_kws = {'cumulative':'True'})"],"metadata":{"id":"6iuD4-7pSbo8","colab":{"base_uri":"https://localhost:8080/","height":642},"executionInfo":{"status":"ok","timestamp":1704939603203,"user_tz":300,"elapsed":2519,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"9ab8b8dc-0c88-438d-e97c-e51deffc18f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-16-218bd9423399>:4: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(duration[duration.notna()].dt.days, hist_kws = {'cumulative':'True'}, kde_kws = {'cumulative':'True'})\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Density'>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# defind the conversion windows\n","# application date range from [2018-10-01 00:00:00, 2018-10-31 00:00:00] 80% -> duration 11 days\n","\n","qualified_applicant_id = pd.DataFrame(df.loc[(df['event'] == 'application_date') & (df['event_date'] <= '2018-10-31'),'applicant_id'].unique())\n","qualified_applicant_id.columns = ['qualified_applicant_id']"],"metadata":{"id":"O9Si64RBRGj7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# filter out who are not qualified in this experiment\n","\n","df = df.merge(qualified_applicant_id, left_on = 'applicant_id', right_on = 'qualified_applicant_id', how = 'inner').reset_index(drop = True)\n","df = df[['applicant_id','channel','group','city','event','event_date']]\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"BWYZY447WhHJ","executionInfo":{"status":"ok","timestamp":1704940466622,"user_tz":300,"elapsed":212,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"9a880130-ffea-4693-daef-9c8e5ff6e713"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  applicant_id            channel    group     city  \\\n","0        10001  web-search-engine  control   Asgard   \n","1        10001  web-search-engine  control   Asgard   \n","2        10001  web-search-engine  control   Asgard   \n","3        10002       social-media  control  Midgard   \n","4        10002       social-media  control  Midgard   \n","\n","                        event event_date  \n","0            application_date 2018-10-01  \n","1            card_mailed_date 2018-10-01  \n","2  orientation_completed_date 2018-10-03  \n","3            application_date 2018-10-01  \n","4            card_mailed_date 2018-10-01  "],"text/html":["\n","  <div id=\"df-92460788-4cfa-40f0-8db2-11989137efee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>applicant_id</th>\n","      <th>channel</th>\n","      <th>group</th>\n","      <th>city</th>\n","      <th>event</th>\n","      <th>event_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10001</td>\n","      <td>web-search-engine</td>\n","      <td>control</td>\n","      <td>Asgard</td>\n","      <td>application_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10001</td>\n","      <td>web-search-engine</td>\n","      <td>control</td>\n","      <td>Asgard</td>\n","      <td>card_mailed_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10001</td>\n","      <td>web-search-engine</td>\n","      <td>control</td>\n","      <td>Asgard</td>\n","      <td>orientation_completed_date</td>\n","      <td>2018-10-03</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10002</td>\n","      <td>social-media</td>\n","      <td>control</td>\n","      <td>Midgard</td>\n","      <td>application_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10002</td>\n","      <td>social-media</td>\n","      <td>control</td>\n","      <td>Midgard</td>\n","      <td>card_mailed_date</td>\n","      <td>2018-10-01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92460788-4cfa-40f0-8db2-11989137efee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-92460788-4cfa-40f0-8db2-11989137efee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-92460788-4cfa-40f0-8db2-11989137efee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb7880b7-6ef1-4b3b-8ee8-a34b25cee37a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb7880b7-6ef1-4b3b-8ee8-a34b25cee37a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb7880b7-6ef1-4b3b-8ee8-a34b25cee37a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# check conversion funnel\n","\n","print(df[df['group'] == 'control'].groupby(['group','event']).applicant_id.nunique().sort_values(ascending = False))\n","print(df[df['group'] == 'treatment'].groupby(['group','event']).applicant_id.nunique().sort_values(ascending = False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LGVVslX6WhUG","executionInfo":{"status":"ok","timestamp":1704941120568,"user_tz":300,"elapsed":183,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"991131a8-32a8-4d61-cc62-b290b12ed066"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["group    event                          \n","control  application_date                   10024\n","         card_mailed_date                   10024\n","         background_check_initiated_date     8582\n","         card_activation_date                8582\n","         background_check_completed_date     8465\n","         orientation_completed_date          4370\n","         first_batch_completed_date          2678\n","Name: applicant_id, dtype: int64\n","group      event                          \n","treatment  application_date                   4958\n","           background_check_completed_date    4958\n","           background_check_initiated_date    4958\n","           card_mailed_date                   4958\n","           card_activation_date               4658\n","           orientation_completed_date         2545\n","           first_batch_completed_date         2115\n","Name: applicant_id, dtype: int64\n"]}]},{"cell_type":"markdown","source":["**Checking the invariate metrics** \\\\\n","sample size (self define function)"],"metadata":{"id":"2O26nAdOawcz"}},{"cell_type":"code","source":["# sanity check - sample size\n","# define invariate check function\n","\n","def invariant_check(test_sample_size, control_sample_size, p_pool, z_score):\n","  p_pool_sd = np.sqrt(p_pool * (1-p_pool)/(test_sample_size + control_sample_size))\n","  margin_error = p_pool_sd * z_score\n","  control_prop = control_sample_size/(test_sample_size + control_sample_size)\n","  confidence_interval_lower = p_pool - margin_error\n","  confidence_interval_upper = p_pool + margin_error\n","  return confidence_interval_lower, confidence_interval_upper, control_prop\n","\n","test_sample = df.groupby('group').agg({'applicant_id':'nunique'}).loc['treatment','applicant_id']\n","control_sample = df.groupby('group').agg({'applicant_id':'nunique'}).loc['control','applicant_id']\n","lower, upper, control_prop = invariant_check(test_sample,control_sample,0.5,1.96)\n","\n","print('confidence interval lower bounds: {}'.format(lower))\n","print('confidence interval upper bounds: {}'.format(upper))\n","print('control proportion: {}'.format(control_prop))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JkMizNCQbIva","executionInfo":{"status":"ok","timestamp":1704942074730,"user_tz":300,"elapsed":406,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"e3da7a91-9efc-4ea0-8ecd-a93283403c1a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["confidence interval lower bounds: 0.4919935281817871\n","confidence interval upper bounds: 0.5080064718182129\n","control proportion: 0.6690695501268189\n"]}]},{"cell_type":"markdown","source":["Result: Doesn't pass the sample size invariate check"],"metadata":{"id":"LBey2753d83U"}},{"cell_type":"markdown","source":["**Checking the evaluation metric** \\\\\n","Method1: Calculate z score for pooled two sample data"],"metadata":{"id":"ZTf-lME_eEim"}},{"cell_type":"code","source":["import scipy.stats as stats\n","\n","# choose metrics\n","# conversion rate = complete first batch / application\n","# calculate z score\n","\n","#define z_score function\n","def z_score_pool(test_success, control_success, test_sample_size, control_sample_size):\n","  d = test_success/test_sample_size - control_success/control_sample_size\n","  p_pool = (test_success + control_success)/(test_sample_size + control_sample_size)\n","  p_pool_sd = np.sqrt(p_pool*(1-p_pool)*(1/test_sample_size + 1/control_sample_size))\n","  z_score = (d-0) / p_pool_sd\n","  return z_score\n","\n","test_complete = 2115\n","control_complete = 2678\n","test_sample_size = 4958\n","control_sample_size = 10024\n","alpha = 0.05\n","dmin = 0 # np pratical significant value provided, then we can assume dmin = 0\n","\n","z = z_score_pool(test_complete, control_complete, test_sample_size, control_sample_size)\n","p_value = (1 - stats.norm.cdf(z))\n","print('z score is %s > 1.65, so we can reject null hypothesis, and accept alternative hypothesis' %z)\n","print('or we can say: p value is %s > 0.05, so we can reject null hypothesis, and accept alternative hypothesis' %p_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qfuhv8G3d5VK","executionInfo":{"status":"ok","timestamp":1704943069675,"user_tz":300,"elapsed":164,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"52858a92-b1ea-4bb7-dc29-a887c2b60e80"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["z score is 19.685398121466985 > 1.65, so we can reject null hypothesis, and accept alternative hypothesis\n","or we can say: p value is 0.0 > 0.05, so we can reject null hypothesis, and accept alternative hypothesis\n"]}]},{"cell_type":"markdown","source":["Method2: Calculate z score for unpooled two sample data"],"metadata":{"id":"X3WUU5HVh5RS"}},{"cell_type":"code","source":["import scipy.stats as stats\n","\n","# choose metrics\n","# conversion rate = complete first batch / application\n","# calculate z score\n","#define z_score function\n","def z_score_unpool(test_success, control_success, test_sample_size, control_sample_size):\n","  d = test_success/test_sample_size - control_success/control_sample_size\n","  p_con = control_success/control_sample_size\n","  p_test = test_success/test_sample_size\n","  p_unpool_sd = np.sqrt((p_con*(1-p_con)/control_sample_size + p_test*(1-p_test)/test_sample_size))\n","  z_score = (d-0) / p_unpool_sd\n","  return z_score\n","\n","# parameter:\n","test_complete = 2115\n","control_complete = 2678\n","test_sample_size = 4958\n","control_sample_size = 10024\n","alpha = 0.05\n","dmin = 0 # np pratical significant value provided, then we can assume dmin = 0\n","\n","z = z_score_unpool(test_complete, control_complete, test_sample_size, control_sample_size)\n","p_value = (1 - stats.norm.cdf(z))\n","print('z score is %s > 1.65, so we can reject null hypothesis, and accept alternative hypothesis' %z)\n","print('or we can say: p value is %s > 0.05, so we can reject null hypothesis, and accept alternative hypothesis' %p_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cV18RekMh4in","executionInfo":{"status":"ok","timestamp":1704943404679,"user_tz":300,"elapsed":148,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"cb91b6e2-3fda-4b0d-c60a-a6b16862aaa1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["z score is 19.21083008024871 > 1.65, so we can reject null hypothesis, and accept alternative hypothesis\n","or we can say: p value is 0.0 > 0.05, so we can reject null hypothesis, and accept alternative hypothesis\n"]}]},{"cell_type":"markdown","source":["Note: If the sample size is big enough, there is not much difference between unpool and pool method"],"metadata":{"id":"yipenhFwjCUJ"}},{"cell_type":"markdown","source":["Method3: Calculate confidence interval"],"metadata":{"id":"NMk9XJDyjMmR"}},{"cell_type":"code","source":["def confidence_interval(test_success, control_success, test_sample_size, control_sample_size):\n","  p_pool = (test_success + control_success)/(test_sample_size + control_sample_size)\n","  p_pool_sd = np.sqrt(p_pool*(1-p_pool)*(1/test_sample_size + 1/control_sample_size))\n","  margin_error = p_pool_sd * 1.96\n","  p_con = control_success/control_sample_size\n","  p_test = test_success/test_sample_size\n","  diff = p_test - p_con\n","  confidence_interval_lower = diff - margin_error\n","  confidence_interval_upper = diff + margin_error\n","  return confidence_interval_lower, confidence_interval_upper\n","\n","# parameter:\n","test_complete = 2115\n","control_complete = 2678\n","test_sample_size = 4958\n","control_sample_size = 10024\n","alpha = 0.05\n","dmin = 0 # np pratical significant value provided, then we can assume dmin = 0\n","\n","confidence_interval_lower, confidence_interval_upper = confidence_interval(test_complete, control_complete, test_sample_size, control_sample_size)\n","\n","print('confidence interval lower is {}'.format(confidence_interval_lower))\n","print('confidence interval upper is {}'.format(confidence_interval_upper))\n","print('confidence interval doesn\\'t include 0, so we can reject null hypothesis, and accept alternative hypothesis')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HJvnRvYIjQj7","executionInfo":{"status":"ok","timestamp":1704943953209,"user_tz":300,"elapsed":189,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"85ff961c-2a6b-46cf-9aa3-c95fc92717f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["confidence interval lower is 0.14355119345413603\n","confidence interval upper is 0.1752977683115272\n","confidence interval doesn't include 0, so we can reject null hypothesis, and accept alternative hypothesis\n"]}]},{"cell_type":"markdown","source":["Note: Must use confidence interval if dmin is given and no equal to 0"],"metadata":{"id":"SqQQWYbTlOx8"}},{"cell_type":"code","source":["## metrics2: t test\n","## decrease the duration from application to completed first batch\n","\n","df_transpose = df.pivot_table(index = ['group','channel','applicant_id'], columns = 'event', values = 'event_date', aggfunc= 'max')\n","df_transpose['duration'] = (df_transpose['first_batch_completed_date'] - df_transpose['application_date']).dt.days\n","df_transpose = df_transpose.reset_index()\n","df_transpose\n","\n","from scipy import stats\n","test_duration = df_transpose.loc[(df_transpose['group'] == 'treatment') & (df_transpose['duration'].notnull()), 'duration']\n","control_duration = df_transpose.loc[(df_transpose['group'] == 'control') & (df_transpose['duration'].notnull()), 'duration']\n","\n","t_score = stats.ttest_ind(control_duration, test_duration)\n","t_score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OKxYeMSnli_i","executionInfo":{"status":"ok","timestamp":1704944515746,"user_tz":300,"elapsed":352,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"2cec432c-e68a-466d-bc54-a196401b3199"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["TtestResult(statistic=39.75542370431981, pvalue=5.822516780864627e-299, df=4791.0)"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["# days from application to first batch completion\n","df_transpose.groupby('group').agg({'duration':'mean'})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"kjHh04hznPCk","executionInfo":{"status":"ok","timestamp":1704944590052,"user_tz":300,"elapsed":210,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"2f7f382d-0aaa-4895-bc7c-b3de1b58fdf8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["event       duration\n","group               \n","control    10.176251\n","treatment   7.076123"],"text/html":["\n","  <div id=\"df-c8ffeca3-503b-4784-9f28-96c5f23aa0d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>event</th>\n","      <th>duration</th>\n","    </tr>\n","    <tr>\n","      <th>group</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>control</th>\n","      <td>10.176251</td>\n","    </tr>\n","    <tr>\n","      <th>treatment</th>\n","      <td>7.076123</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8ffeca3-503b-4784-9f28-96c5f23aa0d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c8ffeca3-503b-4784-9f28-96c5f23aa0d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c8ffeca3-503b-4784-9f28-96c5f23aa0d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-23befb56-fe53-43cf-9bae-bd7c7163a12c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23befb56-fe53-43cf-9bae-bd7c7163a12c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-23befb56-fe53-43cf-9bae-bd7c7163a12c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","source":["*   The background check cost us $30 to complete\n","*   Is this change cost-effective? How should we think about the cost_effectiveness of the change?\n","\n"],"metadata":{"id":"c2btFThalVZL"}},{"cell_type":"code","source":["cost = 30\n","\n","# formula: cost per success\n","\n","control = (30*8582)/2678\n","test = (30*4958)/2115\n","print(control, test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MzmqWmpln_oP","executionInfo":{"status":"ok","timestamp":1704944815530,"user_tz":300,"elapsed":157,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"06385f37-c56d-456a-d4d8-fe4147576cc7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["96.13890963405527 70.32624113475177\n"]}]},{"cell_type":"markdown","source":["**Other Observations**"],"metadata":{"id":"r5fSJ0PgoWQL"}},{"cell_type":"code","source":["channel_cvr = df_transpose.groupby('channel').agg({'application_date':'count','first_batch_completed_date':'count'})\n","channel_cvr['cvr'] = channel_cvr['first_batch_completed_date']/channel_cvr['application_date']\n","channel_cvr.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"1yt8Zu1yoasA","executionInfo":{"status":"ok","timestamp":1704945090465,"user_tz":300,"elapsed":36,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"3bf07506-2fd7-4dac-f43b-04c7e74af4ed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["event                   application_date  first_batch_completed_date       cvr\n","channel                                                                       \n","job-search-site                     2625                         603  0.229714\n","shopper-referral-bonus              1991                         778  0.390758\n","social-media                        4427                        1512  0.341541\n","web-search-engine                   5939                        1900  0.319919"],"text/html":["\n","  <div id=\"df-4afc7df5-6fd2-45a8-800d-bcfc4b988759\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>event</th>\n","      <th>application_date</th>\n","      <th>first_batch_completed_date</th>\n","      <th>cvr</th>\n","    </tr>\n","    <tr>\n","      <th>channel</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>job-search-site</th>\n","      <td>2625</td>\n","      <td>603</td>\n","      <td>0.229714</td>\n","    </tr>\n","    <tr>\n","      <th>shopper-referral-bonus</th>\n","      <td>1991</td>\n","      <td>778</td>\n","      <td>0.390758</td>\n","    </tr>\n","    <tr>\n","      <th>social-media</th>\n","      <td>4427</td>\n","      <td>1512</td>\n","      <td>0.341541</td>\n","    </tr>\n","    <tr>\n","      <th>web-search-engine</th>\n","      <td>5939</td>\n","      <td>1900</td>\n","      <td>0.319919</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4afc7df5-6fd2-45a8-800d-bcfc4b988759')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4afc7df5-6fd2-45a8-800d-bcfc4b988759 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4afc7df5-6fd2-45a8-800d-bcfc4b988759');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5026fd88-31c5-42e4-b7ac-9757694605ab\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5026fd88-31c5-42e4-b7ac-9757694605ab')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5026fd88-31c5-42e4-b7ac-9757694605ab button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["channel_cvr_group = df_transpose.groupby(['group','channel']).agg({'application_date':'count','first_batch_completed_date':'count'})\n","channel_cvr_group['cvr'] = channel_cvr_group['first_batch_completed_date']/channel_cvr_group['application_date']\n","channel_cvr_group"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"hrG3xJ6ZpY0A","executionInfo":{"status":"ok","timestamp":1704945278006,"user_tz":300,"elapsed":149,"user":{"displayName":"Zimeng Liu","userId":"06204341540628818987"}},"outputId":"81e10349-b99a-41c1-901b-aa747d3b2740"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["event                             application_date  \\\n","group     channel                                    \n","control   job-search-site                     1765   \n","          shopper-referral-bonus              1332   \n","          social-media                        2998   \n","          web-search-engine                   3929   \n","treatment job-search-site                      860   \n","          shopper-referral-bonus               659   \n","          social-media                        1429   \n","          web-search-engine                   2010   \n","\n","event                             first_batch_completed_date       cvr  \n","group     channel                                                       \n","control   job-search-site                                279  0.158074  \n","          shopper-referral-bonus                         447  0.335586  \n","          social-media                                   958  0.319546  \n","          web-search-engine                              994  0.252991  \n","treatment job-search-site                                324  0.376744  \n","          shopper-referral-bonus                         331  0.502276  \n","          social-media                                   554  0.387684  \n","          web-search-engine                              906  0.450746  "],"text/html":["\n","  <div id=\"df-decbc4e2-ac42-4e8c-b3a6-af0b50b63571\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>event</th>\n","      <th>application_date</th>\n","      <th>first_batch_completed_date</th>\n","      <th>cvr</th>\n","    </tr>\n","    <tr>\n","      <th>group</th>\n","      <th>channel</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">control</th>\n","      <th>job-search-site</th>\n","      <td>1765</td>\n","      <td>279</td>\n","      <td>0.158074</td>\n","    </tr>\n","    <tr>\n","      <th>shopper-referral-bonus</th>\n","      <td>1332</td>\n","      <td>447</td>\n","      <td>0.335586</td>\n","    </tr>\n","    <tr>\n","      <th>social-media</th>\n","      <td>2998</td>\n","      <td>958</td>\n","      <td>0.319546</td>\n","    </tr>\n","    <tr>\n","      <th>web-search-engine</th>\n","      <td>3929</td>\n","      <td>994</td>\n","      <td>0.252991</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">treatment</th>\n","      <th>job-search-site</th>\n","      <td>860</td>\n","      <td>324</td>\n","      <td>0.376744</td>\n","    </tr>\n","    <tr>\n","      <th>shopper-referral-bonus</th>\n","      <td>659</td>\n","      <td>331</td>\n","      <td>0.502276</td>\n","    </tr>\n","    <tr>\n","      <th>social-media</th>\n","      <td>1429</td>\n","      <td>554</td>\n","      <td>0.387684</td>\n","    </tr>\n","    <tr>\n","      <th>web-search-engine</th>\n","      <td>2010</td>\n","      <td>906</td>\n","      <td>0.450746</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-decbc4e2-ac42-4e8c-b3a6-af0b50b63571')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-decbc4e2-ac42-4e8c-b3a6-af0b50b63571 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-decbc4e2-ac42-4e8c-b3a6-af0b50b63571');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e0643f7b-c15f-48ea-95fa-868c7c262742\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0643f7b-c15f-48ea-95fa-868c7c262742')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e0643f7b-c15f-48ea-95fa-868c7c262742 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":54}]}]}